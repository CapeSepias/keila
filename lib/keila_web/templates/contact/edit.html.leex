<main role="main" class="static-container flex-grow bg-gray-950 text-gray-200">
    <div class="container py-8 sm:py-12 flex">
        <h1 class="text-2xl sm:text-5xl">
            <%= if assigns[:contact] do %>
                <%= @contact.email %>
            <% else %>
                <%= gettext("New Contact") %>
            <% end %>
        </h1>
    </div>

    <div class="bg-gray-800 py-8 flex">
        <div class="container">
            <% path = case assigns[:contact] do
                nil -> Routes.contact_path(@conn, :post_new, @current_project.id)
                contact -> Routes.contact_path(@conn, :post_edit, @current_project.id, contact.id)
            end %>
            <%= f = form_for(@changeset, path, class: "max-w-md flex flex-col gap-4") %>
                <div class="flex flex-col">
                    <%= label(f, :email, "Email") %>
                    <%= with_validation(f, :email) do %>
                        <%= text_input(f, :email, placeholder: gettext("subscriber@example.com"), class: "text-black", autofocus: true) %>
                    <% end %>
                </div>
                <div class="flex flex-col">
                    <%= label(f, :first_name, "Contact name") %>
                    <%= with_validation(f, :first_name) do %>
                        <%= text_input(f, :first_name, placeholder: gettext("Jane"), class: "text-black") %>
                    <% end %>
                </div>
                <div class="flex flex-col">
                    <%= label(f, :last_name, "Last name") %>
                    <%= with_validation(f, :last_name) do %>
                        <%= text_input(f, :last_name, placeholder: gettext("Doe"), class: "text-black") %>
                    <% end %>
                </div>

                <div class="flex gap-4">
                    <a href="<%= Routes.contact_path(@conn, :index, @current_project.id) %>" class="button button--large button--text">
                        <%= gettext("Cancel") %>
                    </a>
                    <%= if assigns[:contact] do %>
                        <button class="button button--cta button--large">
                            <%= gettext("Save") %>
                        </button>
                    <% else %>
                        <button class="button button--cta button--large">
                            <%= gettext("Create contact") %>
                        </button>
                    <% end %>
                </div>
            </form>
        </div>
    </div>

    <%= if assigns[:events] && not Enum.empty?(@events) do %>
        <div class="bg-gray-900 py-8 flex">
            <div class="container">
                <h2 class="text-xl mb-4 font-bold"><%= gettext("Contact Activity") %></h2>
                <div class="grid grid-cols-1 gap-4">
                    <%= for event <- @events do %>
                        <p>
                            <span class="font-bold">
                                <%= local_datetime_tag(event.inserted_at) %>
                            </span>
                            <br>
                            <%= case event.type do %>
                                <% :create -> %>
                                    <%= gettext("created") %>
                                <% :import -> %>
                                    <%= gettext("imported") %>
                                <% :subscribe -> %>
                                    <%= gettext("subscribed") %>
                                    <%= if get_in(event.data, ["captcha"]) do %>
                                        <%= gettext("with captcha") %>
                                    <% end %>
                                <% :open -> %>
                                    <%= gettext("opened campaign") %>
                                <% :click -> %>
                                    <%= gettext("clicked campaign link") %>
                                <% :unsubscribe -> %>
                                    <%= gettext("unsubscribed") %>
                                <% other -> %>
                                    <%= Atom.to_string(other) %>
                            <% end %>
                        </p>
                    <% end %>
                </div>
            </div>
        </div>
    <% end %>
</main>
